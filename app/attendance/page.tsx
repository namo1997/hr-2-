// app/attendance/page.tsx - ‡∏´‡∏ô‡πâ‡∏≤‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏≥‡∏á‡∏≤‡∏ô

'use client';

import { useState } from 'react';
import Link from 'next/link';

interface AttendanceRecord {
  id: number;
  date: string;
  employeeCode: string;
  employeeName: string;
  department: string;
  shift: string;
  checkIn?: string;
  breakOut?: string;
  breakIn?: string;
  checkOut?: string;
  status: 'PRESENT' | 'ABSENT' | 'LEAVE' | 'LATE';
  isLate: boolean;
  lateMinutes: number;
  workHours: number;
  overtimeHours: number;
}

export default function AttendancePage() {
  const [selectedDate, setSelectedDate] = useState(new Date().toISOString().split('T')[0]);
  const [selectedDepartment, setSelectedDepartment] = useState('ALL');
  const [records, setRecords] = useState<AttendanceRecord[]>([]);

  const departments = ['ALL', '‡∏™‡πà‡∏ß‡∏ô‡∏´‡∏ô‡πâ‡∏≤', '‡∏™‡πà‡∏ß‡∏ô‡∏Ñ‡∏£‡∏±‡∏ß', '‡∏™‡πà‡∏ß‡∏ô‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£'];

  const statusColors = {
    PRESENT: 'bg-green-100 text-green-800',
    ABSENT: 'bg-red-100 text-red-800',
    LEAVE: 'bg-yellow-100 text-yellow-800',
    LATE: 'bg-orange-100 text-orange-800',
  };

  const statusLabels = {
    PRESENT: '‡∏°‡∏≤‡∏ó‡∏≥‡∏á‡∏≤‡∏ô',
    ABSENT: '‡∏Ç‡∏≤‡∏î‡∏á‡∏≤‡∏ô',
    LEAVE: '‡∏•‡∏≤',
    LATE: '‡∏°‡∏≤‡∏™‡∏≤‡∏¢',
  };

  return (
    <div className="min-h-screen bg-gray-100 p-8">
      <div className="max-w-7xl mx-auto">
        <div className="flex justify-between items-center mb-8">
          <h1 className="text-3xl font-bold">‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏≥‡∏á‡∏≤‡∏ô</h1>
          <Link href="/" className="px-6 py-2 bg-gray-200 rounded-lg hover:bg-gray-300">
            ‡∏Å‡∏•‡∏±‡∏ö‡∏´‡∏ô‡πâ‡∏≤‡∏´‡∏•‡∏±‡∏Å
          </Link>
        </div>

        {/* ‡∏ï‡∏±‡∏ß‡∏Å‡∏£‡∏≠‡∏á */}
        <div className="bg-white p-6 rounded-lg shadow mb-6">
          <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
            <div>
              <label className="block text-sm font-medium mb-2">‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà</label>
              <input
                type="date"
                value={selectedDate}
                onChange={(e) => setSelectedDate(e.target.value)}
                className="w-full px-4 py-2 border rounded-lg focus:ring-2 focus:ring-blue-500"
              />
            </div>

            <div>
              <label className="block text-sm font-medium mb-2">‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÅ‡∏ú‡∏ô‡∏Å</label>
              <select
                value={selectedDepartment}
                onChange={(e) => setSelectedDepartment(e.target.value)}
                className="w-full px-4 py-2 border rounded-lg focus:ring-2 focus:ring-blue-500"
              >
                {departments.map(dept => (
                  <option key={dept} value={dept}>{dept === 'ALL' ? '‡∏ó‡∏∏‡∏Å‡πÅ‡∏ú‡∏ô‡∏Å' : dept}</option>
                ))}
              </select>
            </div>

            <div className="flex items-end">
              <button
                onClick={() => {/* ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• */}}
                className="w-full px-6 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700"
              >
                ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤
              </button>
            </div>
          </div>
        </div>

        {/* ‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥‡∏™‡∏£‡∏∏‡∏õ */}
        <div className="grid grid-cols-1 md:grid-cols-4 gap-4 mb-6">
          <div className="bg-white p-4 rounded-lg shadow">
            <h3 className="text-gray-500 text-sm">‡∏°‡∏≤‡∏ó‡∏≥‡∏á‡∏≤‡∏ô</h3>
            <p className="text-2xl font-bold text-green-600">{records.filter(r => r.status === 'PRESENT').length}</p>
          </div>
          <div className="bg-white p-4 rounded-lg shadow">
            <h3 className="text-gray-500 text-sm">‡∏°‡∏≤‡∏™‡∏≤‡∏¢</h3>
            <p className="text-2xl font-bold text-orange-600">{records.filter(r => r.isLate).length}</p>
          </div>
          <div className="bg-white p-4 rounded-lg shadow">
            <h3 className="text-gray-500 text-sm">‡∏•‡∏≤</h3>
            <p className="text-2xl font-bold text-yellow-600">{records.filter(r => r.status === 'LEAVE').length}</p>
          </div>
          <div className="bg-white p-4 rounded-lg shadow">
            <h3 className="text-gray-500 text-sm">‡∏Ç‡∏≤‡∏î‡∏á‡∏≤‡∏ô</h3>
            <p className="text-2xl font-bold text-red-600">{records.filter(r => r.status === 'ABSENT').length}</p>
          </div>
        </div>

        {/* ‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡πÅ‡∏™‡∏î‡∏á‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÄ‡∏ß‡∏•‡∏≤ */}
        <div className="bg-white rounded-lg shadow">
          <div className="p-6 border-b">
            <h2 className="text-xl font-bold">‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤-‡∏≠‡∏≠‡∏Å‡∏á‡∏≤‡∏ô ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà {selectedDate}</h2>
          </div>
          
          {records.length === 0 ? (
            <div className="p-12 text-center text-gray-500">
              <p>‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤-‡∏≠‡∏≠‡∏Å‡∏á‡∏≤‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å</p>
              <p className="text-sm mt-2">‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ô‡∏≥‡πÄ‡∏Ç‡πâ‡∏≤‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏™‡πÅ‡∏Å‡∏ô‡∏ô‡∏¥‡πâ‡∏ß‡∏Å‡πà‡∏≠‡∏ô</p>
            </div>
          ) : (
            <div className="overflow-x-auto">
              <table className="min-w-full divide-y divide-gray-200">
                <thead className="bg-gray-50">
                  <tr>
                    <th className="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase">‡∏£‡∏´‡∏±‡∏™</th>
                    <th className="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase">‡∏ä‡∏∑‡πà‡∏≠-‡∏™‡∏Å‡∏∏‡∏•</th>
                    <th className="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase">‡πÅ‡∏ú‡∏ô‡∏Å</th>
                    <th className="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase">‡∏Å‡∏∞</th>
                    <th className="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase">‡πÄ‡∏Ç‡πâ‡∏≤</th>
                    <th className="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase">‡∏û‡∏±‡∏Å‡∏≠‡∏≠‡∏Å</th>
                    <th className="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase">‡∏û‡∏±‡∏Å‡πÄ‡∏Ç‡πâ‡∏≤</th>
                    <th className="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase">‡πÄ‡∏•‡∏¥‡∏Å</th>
                    <th className="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase">‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞</th>
                    <th className="px-4 py-3 text-right text-xs font-medium text-gray-500 uppercase">‡∏ä‡∏°.‡∏ó‡∏≥‡∏á‡∏≤‡∏ô</th>
                    <th className="px-4 py-3 text-right text-xs font-medium text-gray-500 uppercase">OT</th>
                  </tr>
                </thead>
                <tbody className="bg-white divide-y divide-gray-200">
                  {records.map((record) => (
                    <tr key={record.id}>
                      <td className="px-4 py-3 text-sm">{record.employeeCode}</td>
                      <td className="px-4 py-3 text-sm font-medium">{record.employeeName}</td>
                      <td className="px-4 py-3 text-sm">{record.department}</td>
                      <td className="px-4 py-3 text-sm">{record.shift}</td>
                      <td className="px-4 py-3 text-sm font-mono">
                        {record.checkIn || '-'}
                        {record.isLate && (
                          <span className="ml-2 text-xs text-red-600">({record.lateMinutes}‡∏ô)</span>
                        )}
                      </td>
                      <td className="px-4 py-3 text-sm font-mono">{record.breakOut || '-'}</td>
                      <td className="px-4 py-3 text-sm font-mono">{record.breakIn || '-'}</td>
                      <td className="px-4 py-3 text-sm font-mono">{record.checkOut || '-'}</td>
                      <td className="px-4 py-3 text-sm">
                        <span className={`px-2 py-1 rounded text-xs ${statusColors[record.status]}`}>
                          {statusLabels[record.status]}
                        </span>
                      </td>
                      <td className="px-4 py-3 text-sm text-right">{record.workHours.toFixed(2)}</td>
                      <td className="px-4 py-3 text-sm text-right">
                        {record.overtimeHours > 0 ? (
                          <span className="text-blue-600 font-medium">{record.overtimeHours.toFixed(2)}</span>
                        ) : '-'}
                      </td>
                    </tr>
                  ))}
                </tbody>
              </table>
            </div>
          )}
        </div>

        {/* ‡∏Ñ‡∏≥‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢ */}
        <div className="mt-6 bg-blue-50 border border-blue-200 rounded-lg p-4">
          <h3 className="font-bold text-blue-900 mb-2">üí° ‡∏Ñ‡∏≥‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢:</h3>
          <ul className="text-sm text-blue-800 space-y-1">
            <li>‚Ä¢ <strong>‡πÄ‡∏Ç‡πâ‡∏≤:</strong> ‡πÄ‡∏ß‡∏•‡∏≤‡∏™‡πÅ‡∏Å‡∏ô‡πÄ‡∏Ç‡πâ‡∏≤‡∏ó‡∏≥‡∏á‡∏≤‡∏ô (‡∏ñ‡πâ‡∏≤‡∏°‡∏µ‡πÄ‡∏•‡∏Ç‡∏™‡∏µ‡πÅ‡∏î‡∏á‡πÅ‡∏™‡∏î‡∏á‡∏ß‡πà‡∏≤‡∏°‡∏≤‡∏™‡∏≤‡∏¢‡∏Å‡∏µ‡πà‡∏ô‡∏≤‡∏ó‡∏µ)</li>
            <li>‚Ä¢ <strong>‡∏û‡∏±‡∏Å‡∏≠‡∏≠‡∏Å/‡∏û‡∏±‡∏Å‡πÄ‡∏Ç‡πâ‡∏≤:</strong> ‡πÄ‡∏ß‡∏•‡∏≤‡∏û‡∏±‡∏Å‡∏Å‡∏•‡∏≤‡∏á‡∏ß‡∏±‡∏ô (‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏∞‡∏ó‡∏µ‡πà‡∏û‡∏±‡∏Å‡∏¢‡∏∑‡∏î‡∏´‡∏¢‡∏∏‡πà‡∏ô)</li>
            <li>‚Ä¢ <strong>‡πÄ‡∏•‡∏¥‡∏Å:</strong> ‡πÄ‡∏ß‡∏•‡∏≤‡∏™‡πÅ‡∏Å‡∏ô‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏á‡∏≤‡∏ô</li>
            <li>‚Ä¢ <strong>‡∏ä‡∏°.‡∏ó‡∏≥‡∏á‡∏≤‡∏ô:</strong> ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏à‡∏£‡∏¥‡∏á (‡∏´‡∏±‡∏Å‡πÄ‡∏ß‡∏•‡∏≤‡∏û‡∏±‡∏Å‡πÅ‡∏•‡πâ‡∏ß)</li>
            <li>‚Ä¢ <strong>OT:</strong> ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á Overtime (‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÄ‡∏Å‡∏¥‡∏ô‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏´‡∏ô‡∏î)</li>
          </ul>
        </div>
      </div>
    </div>
  );
}
